version: '3.9'

networks:
  bluetooth_net:
    driver: bridge

services:
  front_nginx:
    container_name: ble_front_nginx
    #image: nginx:1.23.2
    build:
      context: ./nginx/front
      dockerfile: Dockerfile
    restart: always
    privileged: true  # fail2ban을 위해 추가
    ports:
      - "81:81" # back_nginx_backend -> FastAPI
      - "82:82" # back_nginx_frontend -> React
    volumes:
      #- ./front/default.conf:/etc/nginx/conf.d/default.conf
      #- ./front/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/front/default.conf:/usr/local/nginx/conf.d/default.conf
      - ./nginx/front/nginx.conf:/usr/local/nginx/conf/nginx.conf
      - ./nginx/front/modsecurity.conf:/usr/local/nginx/conf/modsecurity.conf
      - ./nginx/front/modsec_includes.conf:/usr/local/nginx/conf/modsec_includes.conf
      - ./nginx/front/crs-setup.conf:/usr/local/nginx/conf/rules/crs-setup.conf
      - ./nginx/fail2ban/jail.conf:/etc/fail2ban/jail.conf
      - ./nginx/fail2ban/jail.conf:/etc/fail2ban/jail.local
      - ./nginx/fail2ban/filter.d/:/etc/fail2ban/filter.d/
      # - ./nginx/fail2ban/conf:/etc/ssh/sshd_config
      - ./nginx/log/logs/:/usr/local/nginx/logs/
      - ./nginx/log/log/:/var/log/
    depends_on:
      - back_nginx_frontend
      - back_nginx_backend
    networks:
      - bluetooth_net


  back_nginx_frontend:
    container_name: ble_back_nginx_frontend
    build:
      context: ./nginx/conf/fe_nginx
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./nginx/conf/fe_nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./Bluetooth_infra/frontend/Bluetooth_infra/dist:/usr/share/nginx/html
    depends_on:
      - frontend
    expose:
      - "80"
    networks:
      - bluetooth_net


  back_nginx_backend:
    container_name: ble_back_nginx_backend
    build:
      context: ./nginx/conf/be_nginx
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./nginx/conf/be_nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
    expose:
      - "80"
    networks:
      - bluetooth_net


  frontend:
    build:
      context: ./Bluetooth_infra/frontend/Bluetooth_Infra
      dockerfile: Dockerfile
    container_name: ble_react_frontend
    tty: true
    volumes:
      - ./Bluetooth_infra/frontend/Bluetooth_infra/dist:/dist
    networks:
      - bluetooth_net

  backend:
    build:
      context: ./Bluetooth_infra/backend
      dockerfile: Dockerfile
    container_name: ble_fastapi_backend
    tty: true
    expose:
      - "81"
    depends_on:
      - redis
      - mongodb
    networks:
      - bluetooth_net
    command: uvicorn main:app --host 0.0.0.0 --reload --port 81

  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    container_name: ble_redis
    restart: always
    tty: true
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis/logs:/var/log/redis
    networks:
      - bluetooth_net
    command: ["redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "${REDIS_PASSWORD}"]

  mongodb:
    image: mongo:latest
    container_name: ble_mongodb
    restart: always
    tty: true
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./mongodb/data/db:/data/db
      - ./mongodb/logs:/var/log/mongodb
    networks:
      - bluetooth_net

  socketserver:
    build:
      context: ./SocketServer
      dockerfile: Dockerfile
    container_name: ble_socketserver
    restart: always
    tty: true
    ports:
      - "83:83"
    volumes:
      - ./SocketServer/logs:/var/log/socketserver
    networks:
      - bluetooth_net